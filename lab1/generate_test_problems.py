#!/usr/bin/env python3
"""
Генератор тестовых задач линейного программирования.
Создает 20 файлов задач для тестирования.
"""

import os

# Данные всех 20 задач
PROBLEMS = [
    # Задача 1
    """maximize
2 3 1 4
1 1 0 1 <= 10
2 1 -1 1 = 8
0 1 2 1 >= 5
""",
    # Задача 2
    """minimize
1 2 3 1
1 2 1 0 <= 7
0 1 1 1 = 6
1 0 0 1 >= 2
""",
    # Задача 3
    """maximize
4 1 2 3
1 1 1 0 <= 9
0 2 3 1 = 7
1 0 0 1 >= 3
""",
    # Задача 4
    """minimize
3 1 4 2
2 1 1 0 <= 8
1 0 1 1 = 5
0 1 0 1 >= 4
""",
    # Задача 5
    """maximize
1 5 2 1
1 1 2 0 <= 6
0 1 1 1 = 4
2 0 0 1 >= 3
""",
    # Задача 6
    """minimize
2 1 1 3
1 2 0 1 <= 10
1 0 1 1 = 7
0 1 2 0 >= 5
""",
    # Задача 7
    """maximize
3 2 1 4
2 1 1 0 <= 12
0 2 1 1 = 9
1 0 0 1 >= 4
""",
    # Задача 8
    """minimize
1 3 2 1
1 1 0 2 <= 8
0 1 1 1 = 6
2 0 1 0 >= 2
""",
    # Задача 9
    """maximize
2 1 3 2
1 2 1 0 <= 11
1 0 1 1 = 8
0 1 0 1 >= 3
""",
    # Задача 10
    """minimize
4 1 1 2
2 1 0 1 <= 9
1 1 1 0 = 7
0 0 1 1 >= 5
""",
    # Задача 11
    """maximize
1 2 4 1
1 1 1 0 <= 10
0 2 3 1 = 6
1 0 0 1 >= 2
""",
    # Задача 12
    """minimize
2 3 1 4
1 2 1 0 <= 7
0 1 1 1 = 5
1 0 0 1 >= 3
""",
    # Задача 13
    """maximize
3 1 2 4
2 1 1 0 <= 8
1 0 1 1 = 6
0 1 0 1 >= 4
""",
    # Задача 14
    """minimize
1 4 2 1
1 1 2 0 <= 6
0 1 1 1 = 4
2 0 0 1 >= 3
""",
    # Задача 15
    """maximize
2 1 3 4
1 2 0 1 <= 10
1 0 1 1 = 7
0 1 2 0 >= 5
""",
    # Задача 16
    """minimize
3 2 1 4
2 1 1 0 <= 12
0 2 1 1 = 9
1 0 0 1 >= 4
""",
    # Задача 17
    """maximize
1 3 2 1
1 1 0 2 <= 8
0 1 1 1 = 6
2 0 1 0 >= 2
""",
    # Задача 18
    """minimize
2 1 3 2
1 2 1 0 <= 11
1 0 1 1 = 8
0 1 0 1 >= 3
""",
    # Задача 19
    """maximize
4 1 1 2
2 1 0 1 <= 9
1 1 1 0 = 7
0 0 1 1 >= 5
""",
    # Задача 20
    """minimize
1 2 4 1
1 1 1 0 <= 10
0 2 3 1 = 6
1 0 0 1 >= 2
""",
]


def generate_problems(output_dir="test_problems"):
    """Генерирует файлы задач."""
    # Создаем директорию если её нет
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
        print(f"Создана директория: {output_dir}/")
    
    # Генерируем файлы
    for i, problem_text in enumerate(PROBLEMS, start=1):
        filename = os.path.join(output_dir, f"problem{i:02d}.txt")
        with open(filename, 'w', encoding='utf-8') as f:
            f.write(problem_text)
        print(f"✓ Создан файл: {filename}")
    
    print(f"\n✓ Успешно создано {len(PROBLEMS)} файлов задач в директории '{output_dir}/'")


if __name__ == "__main__":
    generate_problems()

